#include<iostream>    
#include<algorithm>     
#include<string>  
#include<vector>
#include<map>  
#include<set>
#include<string>  



std::vector<std::string> commonChars(std::vector<std::string>& words)
{       

	
	std::vector<std::map<char, int>> accumArray; 
	std::map<char, int>::iterator itr;      
	for (const auto &word:words)
	{
		std::map<char, int>charCount;  
		for (const char & c : word)
		{
			charCount[c]++; 
		}
		accumArray.push_back(charCount);
	}


	std::map<char, int> mapAlpa;
	for (char i = 'a'; i <= 'z'; i++)
	{
		mapAlpa[i] = INT_MAX;
	}
	for (const auto& charCount : accumArray) {
		for (char c = 'a'; c <= 'z'; ++c) {
			if (charCount.find(c) != charCount.end()) {
				mapAlpa[c] = std::min(mapAlpa[c], charCount.at(c));
			}
			else {
				mapAlpa[c] = 0;
			}
		}
	}

	std::vector<std::string> result;
	for (char c = 'a'; c <= 'z'; ++c) {
		for (int count = 0; count < mapAlpa[c]; ++count) {
			result.push_back(std::string(1, c));
		}
	}
	return result;

}

int main()
{
	std::vector<std::string> test1 = { "cool","lock","cook" };
	std::vector<std::string> res = commonChars(test1);
	
	for (int i = 0; i < res.size(); i++)
	{
		std::cout << res[i] << "  ";
	}   
	
	
	return 0;
}
